- name: catalogue
  hosts: catalogue
  become: yes
  tasks:
  - name: disable old nodejs and enable nodejs
    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y

  - name: install nodejs
    ansible.builtin.dnf:
      name: nodejs
      state: present
 
  - name: create roboshop user
    ansible.builtin.user:
     name: roboshop

  - name: create app directory
    ansible.builtin.file:
     path: /app
     state: directory

  - name: download catalogue application
    ansible.builtin.get_url:
     url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
     dest: /tmp

  - name: extract catalogue application  
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app  
      remote_src: yes

  - name: install dependencies
    ansible.builtin.command: npm install  
    args:
      chdir: /app

  - name: copy catalogue.service
    ansible.builtin.copy:
       src: catalogue.service
       dest: /etc/yum.repos.d/catalogue.service  

  - name: daemon reload and start
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: copy mongodb.repo
    ansible.builtin.copy:
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongodb.repo 

  - name: install mongodb client
    ansible.builtin.package:
     name: mongodb-org-shell
     state: present  

  - name: get the categories count
    ansible.builtin.command:  mongo --host mongodb.gopisri.cloud --quiet --eval 'db = db.getSiblingDB("catalogue"); db.products.count()'
    register: product_count

  - name: print the count
    ansible.builtin.debug:
     msg: "product count: {{product_count}}"
           
  - name: load catalogue data
    ansible.builtin.command: mongo --host mongodb.gopisri.cloud < /app/schema/catalogue.js 
  
  


